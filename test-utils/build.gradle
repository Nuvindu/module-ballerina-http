plugins {
    id 'java'
    id 'com.github.spotbugs'
    id 'checkstyle'
}

group 'io.ballerina.stdlib'
version '2.4.6-SNAPSHOT'

description = 'Ballerina - HTTP test utils'

dependencies {
    checkstyle project(":checkstyle")
    checkstyle "com.puppycrawl.tools:checkstyle:${puppycrawlCheckstyleVersion}"

    implementation project(":http-native")

    implementation group: 'org.ballerinalang', name: 'ballerina-runtime', version: "${ballerinaLangVersion}"
    implementation group: 'org.slf4j', name: 'slf4j-jdk14', version: "${slf4jVersion}"
    implementation group: 'org.testng', name: 'testng', version: "${testngVersion}"
    implementation group: 'io.netty', name: 'netty-codec-http2', version:"${nettyVersion}"
    implementation group: 'io.netty', name: 'netty-handler-proxy', version:"${nettyVersion}"
}

checkstyle {
    toolVersion '7.8.2'
    configFile rootProject.file("build-config/checkstyle/build/checkstyle.xml")
    configProperties = ["suppressionFile" : file("${rootDir}/build-config/checkstyle/build/suppressions.xml")]
}

def excludePattern = '**/module-info.java'
tasks.withType(Checkstyle) {
    exclude excludePattern
}

checkstyleMain.dependsOn(":checkstyle:downloadCheckstyleRuleFiles")
checkstyleTest.dependsOn(":checkstyle:downloadCheckstyleRuleFiles")

spotbugsTest {
    enabled = false
}

compileJava {
    doFirst {
        options.compilerArgs = [
                '--module-path', classpath.asPath,
        ]
        classpath = files()
    }
}
